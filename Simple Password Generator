import random
import string

def generate_password(length=12, use_uppercase=True, use_lowercase=True, 
                      use_digits=True, use_punctuation=True, exclude_ambiguous=False):
    """
    Automatically generates a strong password with flexible settings.
    
    :param length: Length of the password to generate (default is 12).
    :param use_uppercase: Whether to include uppercase letters (default is True).
    :param use_lowercase: Whether to include lowercase letters (default is True).
    :param use_digits: Whether to include digits (default is True).
    :param use_punctuation: Whether to include punctuation characters (default is True).
    :param exclude_ambiguous: Whether to exclude ambiguous characters like '1', 'I', 'l', '0', 'O' (default is False).
    :return: The generated password as a string.
    """
    
    # Define character pools
    characters = ""
    if use_uppercase:
        characters += string.ascii_uppercase
    if use_lowercase:
        characters += string.ascii_lowercase
    if use_digits:
        characters += string.digits
    if use_punctuation:
        characters += string.punctuation
    
    # Exclude ambiguous characters if the option is enabled
    if exclude_ambiguous:
        ambiguous_chars = "il1Lo0O"
        characters = ''.join(c for c in characters if c not in ambiguous_chars)
    
    # Ensure there's at least one character type selected
    if not characters:
        print("Error: No character types selected! Please include at least one category.")
        return None

    # Ensure the password length is at least 6 for security
    if length < 6:
        print("Warning: It is recommended to have a password length of at least 6 characters.")
        length = 6  # Enforcing minimum length

    # Generate password
    password = ''.join(random.choice(characters) for _ in range(length))
    
    return password

# Main function to interact with the user
def main():
    try:
        length = int(input("Enter password length (minimum 6): "))
        if length < 6:
            print("Password length should be at least 6 characters for security.")
            return
        
        use_uppercase = input("Include uppercase letters? (y/n): ").strip().lower() == 'y'
        use_lowercase = input("Include lowercase letters? (y/n): ").strip().lower() == 'y'
        use_digits = input("Include numbers? (y/n): ").strip().lower() == 'y'
        use_punctuation = input("Include special characters? (y/n): ").strip().lower() == 'y'
        exclude_ambiguous = input("Exclude ambiguous characters (e.g., 0, O, 1, l, I)? (y/n): ").strip().lower() == 'y'
        
        password = generate_password(length, use_uppercase, use_lowercase, use_digits, use_punctuation, exclude_ambiguous)
        
        if password:
            print(f"\nGenerated Password: {password}")
    
    except ValueError:
        print("Invalid input. Please enter a valid number for password length.")

if __name__ == "__main__":
    main()
